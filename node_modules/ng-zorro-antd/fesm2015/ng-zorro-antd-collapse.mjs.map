{"version":3,"file":"ng-zorro-antd-collapse.mjs","sources":["../../components/collapse/collapse.component.ts","../../components/collapse/collapse-panel.component.ts","../../components/collapse/collapse.module.ts","../../components/collapse/public-api.ts","../../components/collapse/ng-zorro-antd-collapse.ts"],"sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnInit,\n  Optional,\n  ViewEncapsulation\n} from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzDestroyService } from 'ng-zorro-antd/core/services';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { NzCollapsePanelComponent } from './collapse-panel.component';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'collapse';\n\n@Component({\n  selector: 'nz-collapse',\n  exportAs: 'nzCollapse',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: ` <ng-content></ng-content> `,\n  host: {\n    class: 'ant-collapse',\n    '[class.ant-collapse-icon-position-left]': `nzExpandIconPosition === 'left'`,\n    '[class.ant-collapse-icon-position-right]': `nzExpandIconPosition === 'right'`,\n    '[class.ant-collapse-ghost]': `nzGhost`,\n    '[class.ant-collapse-borderless]': '!nzBordered',\n    '[class.ant-collapse-rtl]': \"dir === 'rtl'\"\n  },\n  providers: [NzDestroyService]\n})\nexport class NzCollapseComponent implements OnInit {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n  static ngAcceptInputType_nzAccordion: BooleanInput;\n  static ngAcceptInputType_nzBordered: BooleanInput;\n  static ngAcceptInputType_nzGhost: BooleanInput;\n\n  @Input() @WithConfig() @InputBoolean() nzAccordion: boolean = false;\n  @Input() @WithConfig() @InputBoolean() nzBordered: boolean = true;\n  @Input() @WithConfig() @InputBoolean() nzGhost: boolean = false;\n  @Input() nzExpandIconPosition: 'left' | 'right' = 'left';\n\n  dir: Direction = 'ltr';\n\n  private listOfNzCollapsePanelComponent: NzCollapsePanelComponent[] = [];\n\n  constructor(\n    public nzConfigService: NzConfigService,\n    private cdr: ChangeDetectorRef,\n    @Optional() private directionality: Directionality,\n    private destroy$: NzDestroyService\n  ) {\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngOnInit(): void {\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n  }\n\n  addPanel(value: NzCollapsePanelComponent): void {\n    this.listOfNzCollapsePanelComponent.push(value);\n  }\n\n  removePanel(value: NzCollapsePanelComponent): void {\n    this.listOfNzCollapsePanelComponent.splice(this.listOfNzCollapsePanelComponent.indexOf(value), 1);\n  }\n\n  click(collapse: NzCollapsePanelComponent): void {\n    if (this.nzAccordion && !collapse.nzActive) {\n      this.listOfNzCollapsePanelComponent\n        .filter(item => item !== collapse)\n        .forEach(item => {\n          if (item.nzActive) {\n            item.nzActive = false;\n            item.nzActiveChange.emit(item.nzActive);\n            item.markForCheck();\n          }\n        });\n    }\n    collapse.nzActive = !collapse.nzActive;\n    collapse.nzActiveChange.emit(collapse.nzActive);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport { collapseMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { NzDestroyService } from 'ng-zorro-antd/core/services';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { NzCollapseComponent } from './collapse.component';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'collapsePanel';\n\n@Component({\n  selector: 'nz-collapse-panel',\n  exportAs: 'nzCollapsePanel',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  animations: [collapseMotion],\n  template: `\n    <div #collapseHeader role=\"button\" [attr.aria-expanded]=\"nzActive\" class=\"ant-collapse-header\">\n      <div *ngIf=\"nzShowArrow\">\n        <ng-container *nzStringTemplateOutlet=\"nzExpandedIcon; let expandedIcon\">\n          <i nz-icon [nzType]=\"expandedIcon || 'right'\" class=\"ant-collapse-arrow\" [nzRotate]=\"nzActive ? 90 : 0\"></i>\n        </ng-container>\n      </div>\n      <ng-container *nzStringTemplateOutlet=\"nzHeader\">{{ nzHeader }}</ng-container>\n      <div class=\"ant-collapse-extra\" *ngIf=\"nzExtra\">\n        <ng-container *nzStringTemplateOutlet=\"nzExtra\">{{ nzExtra }}</ng-container>\n      </div>\n    </div>\n    <div\n      class=\"ant-collapse-content\"\n      [class.ant-collapse-content-active]=\"nzActive\"\n      [@.disabled]=\"noAnimation?.nzNoAnimation\"\n      [@collapseMotion]=\"nzActive ? 'expanded' : 'hidden'\"\n    >\n      <div class=\"ant-collapse-content-box\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `,\n\n  host: {\n    class: 'ant-collapse-item',\n    '[class.ant-collapse-no-arrow]': '!nzShowArrow',\n    '[class.ant-collapse-item-active]': 'nzActive',\n    '[class.ant-collapse-item-disabled]': 'nzDisabled'\n  },\n  providers: [NzDestroyService]\n})\nexport class NzCollapsePanelComponent implements OnInit, OnDestroy {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n  static ngAcceptInputType_nzActive: BooleanInput;\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n  static ngAcceptInputType_nzShowArrow: BooleanInput;\n\n  @Input() @InputBoolean() nzActive = false;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() @WithConfig() @InputBoolean() nzShowArrow: boolean = true;\n  @Input() nzExtra?: string | TemplateRef<void>;\n  @Input() nzHeader?: string | TemplateRef<void>;\n  @Input() nzExpandedIcon?: string | TemplateRef<void>;\n  @Output() readonly nzActiveChange = new EventEmitter<boolean>();\n\n  @ViewChild('collapseHeader', { static: true }) collapseHeader!: ElementRef<HTMLElement>;\n\n  markForCheck(): void {\n    this.cdr.markForCheck();\n  }\n\n  constructor(\n    public nzConfigService: NzConfigService,\n    private ngZone: NgZone,\n    private cdr: ChangeDetectorRef,\n    private destroy$: NzDestroyService,\n    @Host() private nzCollapseComponent: NzCollapseComponent,\n    @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngOnInit(): void {\n    this.nzCollapseComponent.addPanel(this);\n\n    this.ngZone.runOutsideAngular(() =>\n      fromEvent(this.collapseHeader.nativeElement, 'click')\n        .pipe(\n          filter(() => !this.nzDisabled),\n          takeUntil(this.destroy$)\n        )\n        .subscribe(() => {\n          this.ngZone.run(() => {\n            this.nzCollapseComponent.click(this);\n            this.cdr.markForCheck();\n          });\n        })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.nzCollapseComponent.removePanel(this);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzCollapsePanelComponent } from './collapse-panel.component';\nimport { NzCollapseComponent } from './collapse.component';\n\n@NgModule({\n  declarations: [NzCollapsePanelComponent, NzCollapseComponent],\n  exports: [NzCollapsePanelComponent, NzCollapseComponent],\n  imports: [BidiModule, CommonModule, NzIconModule, NzOutletModule, NzNoAnimationModule]\n})\nexport class NzCollapseModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './collapse-panel.component';\nexport * from './collapse.component';\nexport * from './collapse.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["NZ_CONFIG_MODULE_NAME"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAwBA,MAAMA,uBAAqB,GAAgB,UAAU,CAAC;MAkBzC,mBAAmB;IAe9B,YACS,eAAgC,EAC/B,GAAsB,EACV,cAA8B,EAC1C,QAA0B;QAH3B,oBAAe,GAAf,eAAe,CAAiB;QAC/B,QAAG,GAAH,GAAG,CAAmB;QACV,mBAAc,GAAd,cAAc,CAAgB;QAC1C,aAAQ,GAAR,QAAQ,CAAkB;QAlB3B,kBAAa,GAAgBA,uBAAqB,CAAC;QAKrB,gBAAW,GAAY,KAAK,CAAC;QAC7B,eAAU,GAAY,IAAI,CAAC;QAC3B,YAAO,GAAY,KAAK,CAAC;QACvD,yBAAoB,GAAqB,MAAM,CAAC;QAEzD,QAAG,GAAc,KAAK,CAAC;QAEf,mCAA8B,GAA+B,EAAE,CAAC;QAQtE,IAAI,CAAC,eAAe;aACjB,gCAAgC,CAACA,uBAAqB,CAAC;aACvD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;SACzB,CAAC,CAAC;KACN;IAED,QAAQ;;QACN,MAAA,IAAI,CAAC,cAAc,CAAC,MAAM,0CAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC,CAAC,SAAoB;YACxF,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;YACrB,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;SAC1B,CAAC,CAAC;QAEH,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;KACtC;IAED,QAAQ,CAAC,KAA+B;QACtC,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACjD;IAED,WAAW,CAAC,KAA+B;QACzC,IAAI,CAAC,8BAA8B,CAAC,MAAM,CAAC,IAAI,CAAC,8BAA8B,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;KACnG;IAED,KAAK,CAAC,QAAkC;QACtC,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;YAC1C,IAAI,CAAC,8BAA8B;iBAChC,MAAM,CAAC,IAAI,IAAI,IAAI,KAAK,QAAQ,CAAC;iBACjC,OAAO,CAAC,IAAI;gBACX,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACjB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACxC,IAAI,CAAC,YAAY,EAAE,CAAC;iBACrB;aACF,CAAC,CAAC;SACN;QACD,QAAQ,CAAC,QAAQ,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACvC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KACjD;;gHA5DU,mBAAmB;oGAAnB,mBAAmB,ggBAFnB,CAAC,gBAAgB,CAAC,oDATnB,6BAA6B;AAiBA;IAA7B,UAAU,EAAE;IAAE,YAAY,EAAE;wDAA8B;AAC7B;IAA7B,UAAU,EAAE;IAAE,YAAY,EAAE;uDAA4B;AAC3B;IAA7B,UAAU,EAAE;IAAE,YAAY,EAAE;oDAA0B;2FARrD,mBAAmB;kBAhB/B,SAAS;mBAAC;oBACT,QAAQ,EAAE,aAAa;oBACvB,QAAQ,EAAE,YAAY;oBACtB,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,QAAQ,EAAE,6BAA6B;oBACvC,IAAI,EAAE;wBACJ,KAAK,EAAE,cAAc;wBACrB,yCAAyC,EAAE,iCAAiC;wBAC5E,0CAA0C,EAAE,kCAAkC;wBAC9E,4BAA4B,EAAE,SAAS;wBACvC,iCAAiC,EAAE,aAAa;wBAChD,0BAA0B,EAAE,eAAe;qBAC5C;oBACD,SAAS,EAAE,CAAC,gBAAgB,CAAC;iBAC9B;;;8BAmBI,QAAQ;;yBAZ4B,WAAW;sBAAjD,KAAK;gBACiC,UAAU;sBAAhD,KAAK;gBACiC,OAAO;sBAA7C,KAAK;gBACG,oBAAoB;sBAA5B,KAAK;;;ACjBR,MAAM,qBAAqB,GAAgB,eAAe,CAAC;MAwC9C,wBAAwB;IAoBnC,YACS,eAAgC,EAC/B,MAAc,EACd,GAAsB,EACtB,QAA0B,EAClB,mBAAwC,EACrC,WAAoC;QALhD,oBAAe,GAAf,eAAe,CAAiB;QAC/B,WAAM,GAAN,MAAM,CAAQ;QACd,QAAG,GAAH,GAAG,CAAmB;QACtB,aAAQ,GAAR,QAAQ,CAAkB;QAClB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACrC,gBAAW,GAAX,WAAW,CAAyB;QAzBhD,kBAAa,GAAgB,qBAAqB,CAAC;QAKnC,aAAQ,GAAG,KAAK,CAAC;QACjB,eAAU,GAAG,KAAK,CAAC;QACL,gBAAW,GAAY,IAAI,CAAC;QAIhD,mBAAc,GAAG,IAAI,YAAY,EAAW,CAAC;QAgB9D,IAAI,CAAC,eAAe;aACjB,gCAAgC,CAAC,qBAAqB,CAAC;aACvD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;SACzB,CAAC,CAAC;KACN;IAlBD,YAAY;QACV,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;KACzB;IAkBD,QAAQ;QACN,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAExC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAC5B,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,OAAO,CAAC;aAClD,IAAI,CACH,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAC9B,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CACzB;aACA,SAAS,CAAC;YACT,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;gBACd,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACrC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;aACzB,CAAC,CAAC;SACJ,CAAC,CACL,CAAC;KACH;IAED,WAAW;QACT,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KAC5C;;qHAxDU,wBAAwB;yGAAxB,wBAAwB,6cAFxB,CAAC,gBAAgB,CAAC,yLA9BnB;;;;;;;;;;;;;;;;;;;;;;GAsBT,4dAvBW,CAAC,cAAc,CAAC;AAuCH;IAAf,YAAY,EAAE;0DAAkB;AACjB;IAAf,YAAY,EAAE;4DAAoB;AACL;IAA7B,UAAU,EAAE;IAAE,YAAY,EAAE;6DAA6B;2FARxD,wBAAwB;kBAtCpC,SAAS;mBAAC;oBACT,QAAQ,EAAE,mBAAmB;oBAC7B,QAAQ,EAAE,iBAAiB;oBAC3B,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,UAAU,EAAE,CAAC,cAAc,CAAC;oBAC5B,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;GAsBT;oBAED,IAAI,EAAE;wBACJ,KAAK,EAAE,mBAAmB;wBAC1B,+BAA+B,EAAE,cAAc;wBAC/C,kCAAkC,EAAE,UAAU;wBAC9C,oCAAoC,EAAE,YAAY;qBACnD;oBACD,SAAS,EAAE,CAAC,gBAAgB,CAAC;iBAC9B;;;8BA0BI,IAAI;;8BACJ,QAAQ;;yBApBc,QAAQ;sBAAhC,KAAK;gBACmB,UAAU;sBAAlC,KAAK;gBACiC,WAAW;sBAAjD,KAAK;gBACG,OAAO;sBAAf,KAAK;gBACG,QAAQ;sBAAhB,KAAK;gBACG,cAAc;sBAAtB,KAAK;gBACa,cAAc;sBAAhC,MAAM;gBAEwC,cAAc;sBAA5D,SAAS;uBAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;ACxF/C;;;;MAqBa,gBAAgB;;6GAAhB,gBAAgB;8GAAhB,gBAAgB,iBAJZ,wBAAwB,EAAE,mBAAmB,aAElD,UAAU,EAAE,YAAY,EAAE,YAAY,EAAE,cAAc,EAAE,mBAAmB,aAD3E,wBAAwB,EAAE,mBAAmB;8GAG5C,gBAAgB,YAFlB,CAAC,UAAU,EAAE,YAAY,EAAE,YAAY,EAAE,cAAc,EAAE,mBAAmB,CAAC;2FAE3E,gBAAgB;kBAL5B,QAAQ;mBAAC;oBACR,YAAY,EAAE,CAAC,wBAAwB,EAAE,mBAAmB,CAAC;oBAC7D,OAAO,EAAE,CAAC,wBAAwB,EAAE,mBAAmB,CAAC;oBACxD,OAAO,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,YAAY,EAAE,cAAc,EAAE,mBAAmB,CAAC;iBACvF;;;ACpBD;;;;;ACAA;;;;;;"}